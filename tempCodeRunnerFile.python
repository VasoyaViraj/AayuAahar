import random
import uuid
import json
from datetime import datetime, timedelta

# ---- Patients ----
patients = [
    {"id": "pat_001", "name": "Priya Sharma", "age": 32, "gender": "Female", "height": "165 cm", "weight": "58 kg"},
    {"id": "pat_002", "name": "Rajesh Kumar", "age": 45, "gender": "Male", "height": "175 cm", "weight": "72 kg"},
    {"id": "pat_003", "name": "Anjali Mehta", "age": 28, "gender": "Female", "height": "160 cm", "weight": "55 kg"},
    {"id": "pat_004", "name": "Arjun Patel", "age": 38, "gender": "Male", "height": "178 cm", "weight": "80 kg"},
    {"id": "pat_005", "name": "Sneha Verma", "age": 26, "gender": "Female", "height": "162 cm", "weight": "54 kg"},
    {"id": "pat_006", "name": "Amit Joshi", "age": 50, "gender": "Male", "height": "170 cm", "weight": "76 kg"},
    {"id": "pat_007", "name": "Kavita Nair", "age": 35, "gender": "Female", "height": "158 cm", "weight": "60 kg"},
    {"id": "pat_008", "name": "Vikram Singh", "age": 41, "gender": "Male", "height": "180 cm", "weight": "85 kg"},
    {"id": "pat_009", "name": "Neha Gupta", "age": 29, "gender": "Female", "height": "164 cm", "weight": "59 kg"},
    {"id": "pat_010", "name": "Suresh Reddy", "age": 47, "gender": "Male", "height": "172 cm", "weight": "78 kg"},
    {"id": "pat_011", "name": "Meera Iyer", "age": 31, "gender": "Female", "height": "161 cm", "weight": "57 kg"},
    {"id": "pat_012", "name": "Rohan Desai", "age": 36, "gender": "Male", "height": "177 cm", "weight": "74 kg"},
]

# ---- Doctors ----
doctors = [
    {"id": "doc_001", "name": "Dr. Rajesh Kumar"},
    {"id": "doc_002", "name": "Dr. Anjali Mehta"},
    {"id": "doc_003", "name": "Dr. Kavita Nair"},
    {"id": "doc_004", "name": "Dr. Suresh Reddy"},
]

# ---- Options ----
lifestyles = ["Sedentary", "Active", "Moderate"]
prakritis = ["Vata", "Pitta", "Kapha", "Vata-Pitta", "Kapha-Vata", "Pitta-Kapha"]
conditions_list = [
    "Digestive issues, Stress",
    "Joint pain, High cholesterol",
    "Acidity, Skin issues",
    "Back pain, Stress",
    "Weight fluctuations, Low energy",
    "Diabetes, Hypertension",
    "Insomnia",
    "Allergies, Low immunity",
    "Thyroid imbalance",
]
visit_types = ["New Patient", "Follow-up", "Consultation"]

diet_options = [
    {"breakfast": ("Oats with almonds", "50g oats + 10 almonds", 320),
     "lunch": ("Dal rice with vegetables", "100g rice + 50g dal + 100g vegetables", 450),
     "highTea": ("Herbal tea with biscuits", "1 cup tea + 2 biscuits", 150),
     "dinner": ("Khichdi with ghee", "80g khichdi + 1 tsp ghee", 280)},
    {"breakfast": ("Green smoothie with protein", "200ml smoothie + 20g protein", 280),
     "lunch": ("Grilled chicken with quinoa", "100g chicken + 80g quinoa + salad", 520),
     "highTea": ("Green tea with nuts", "1 cup tea + 15g mixed nuts", 120),
     "dinner": ("Fish curry with brown rice", "100g fish + 60g brown rice", 380)},
    {"breakfast": ("Coconut water with fruits", "200ml coconut water + 100g fruits", 180),
     "lunch": ("Cooling vegetables with rice", "100g rice + 120g cooling vegetables", 380),
     "highTea": ("Mint tea with crackers", "1 cup mint tea + 3 crackers", 100),
     "dinner": ("Moong dal soup", "150ml soup + 1 roti", 220)},
]

def random_diet():
    choice = random.choice(diet_options)
    return {
        "breakfast": {"name": choice["breakfast"][0], "grams": choice["breakfast"][1], "calories": choice["breakfast"][2]},
        "lunch": {"name": choice["lunch"][0], "grams": choice["lunch"][1], "calories": choice["lunch"][2]},
        "highTea": {"name": choice["highTea"][0], "grams": choice["highTea"][1], "calories": choice["highTea"][2]},
        "dinner": {"name": choice["dinner"][0], "grams": choice["dinner"][1], "calories": choice["dinner"][2]},
    }

# ---- Report Generator ----
reports = []
today = datetime.today()

for patient in patients:
    repeat = random.randint(2, 4)  # each patient 2-4 reports
    for _ in range(repeat):
        doctor = random.choice(doctors)

        # 25% chance report is today
        if random.random() < 0.25:
            created_at = today.replace(hour=random.randint(8, 20), minute=random.randint(0, 59), second=0, microsecond=0)
        else:
            created_at = today - timedelta(days=random.randint(1, 30), hours=random.randint(0, 23))

        follow_up = created_at + timedelta(days=random.randint(5, 15))
        if follow_up > today:
            follow_up = today

        report = {
            "$id": "report_" + str(uuid.uuid4())[:8],
            "patID": patient["id"],
            "docID": doctor["id"],
            "docName": doctor["name"],
            "visitType": random.choice(visit_types),
            "patName": patient["name"],
            "patAge": patient["age"],
            "patGender": patient["gender"],
            "patHeight": patient["height"],
            "patWeight": patient["weight"],
            "lifestyle": random.choice(lifestyles),
            "prakriti": random.choice(prakritis),
            "conditions": random.choice(conditions_list),
            "goal": "Improve overall health and balance doshas",
            "bowelMovements": random.choice(["Regular", "Irregular"]),
            "waterIntake": f"{random.randint(2, 8)}-{random.randint(3, 9)} glasses daily",
            "dietPref": random.choice(["Vegetarian", "Non-vegetarian"]),
            "problemDescByDoctor": "Patient presents with lifestyle imbalance requiring Ayurvedic guidance.",
            "solutionByDoctor": "Prescribed herbs, diet changes, and yoga practices.",
            "followUpDate": follow_up.strftime("%Y-%m-%d"),
            "dietChart": random_diet(),
            "$createdAt": created_at.isoformat(),
            "$updatedAt": created_at.isoformat(),
        }
        reports.append(report)

# ---- Save to JSON ----
with open("reports.json", "w", encoding="utf-8") as f:
    json.dump(reports, f, indent=2, ensure_ascii=False)

print(f"âœ… Generated {len(reports)} reports and saved to reports.json")
print(f"ðŸ“Œ {sum(1 for r in reports if r['$createdAt'].startswith(today.strftime('%Y-%m-%d')))} reports are from today")
